# NOTE: IF EXECUTING WITHOUT DOCKER, JUST CHANGE CONFIGS WITH ${CONFIG} NOTATION
# LEAVE THE REST AS IT IS

# Microsoft Azure Active Directory configuration
auth.tenantId=${TENANT_ID}
auth.clientId=${CLIENT_ID}
auth.keyPath=${KEY_PATH}
auth.certPath=${CERT_PATH}

# Sharepoint
sharepoint.host=${SHAREPOINT_HOST}
sharepoint.site-id=${SHAREPOINT_SITE_ID}
sharepoint.path-to-doc=${SHAREPOINT_PATH_TO_DOC}

# If also files need to be fetched, set flag true and ste the path to the files
sharepoint.fetch-files=${SHAREPOINT_FETCH_FILES}
sharepoint.path-to-files=${SHAREPOINT_PATH_TO_FILES}

# AWS S3 Bucket Access Point credentials
aws.bucket-name=${AWS_BUCKET_NAME}
aws.bucket-url=${AWS_BUCKET_URL}
aws.access-key=${AWS_ACCESS_KEY}
aws.access-secret-key=${AWS_ACCESS_SECRET_KEY}

# Cron job to check modifications in spreadsheet
cron=${SCHEDULER_CRON}

# OpenDataHub O-AUTH Keycloak configuration
authorizationUri=${OAUTH_AUTH_URI}
tokenUri=${OAUTH_TOKEN_URI}
BASE_URI=${OAUTH_BASE_URI}
clientId=${OAUTH_CLIENT_ID}
clientName=${OAUTH_CLIENT_NAME}
clientSecret=${OAUTH_CLIENT_SECRET}


# keycloak scope
scope=openid

# OpenDataHub data configuration
spreadsheetId=office365
suportedLanguages=en,de,it,lad
headers.nameId=name
headers.addressId=address
headers.longitudeId=longitude
headers.latitudeId=latitude
headers.metaDataId=metadata-id
stationtype=NOI-Place
spreadsheet.sheets.metadataId=metadata-id
composite.unique.key=beacon id
provenance.name=dc-office365
provenance.version=1.0.0-SNAPSHOT


# BDP config, placeholders just to prevent crashing
# Spring boot prevents dc-interface to look in its own application.properties
bdp_host=localhost
bdp_port=00000
bdp_endpoint=localhost

# sets web type to none, since we don't need a web server
# fixes cicrcular dependency issue
spring.main.web-application-type=NONE
