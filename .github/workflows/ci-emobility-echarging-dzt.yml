name: CI/CD emobility-echarging-dzt

on:
  push:
    paths:
      - "data-collectors/emobility-echarging-dzt/**"
      - ".github/workflows/ci-emobility-echarging-dzt.yml"

env:
  WORKING_DIRECTORY: data-collectors/emobility-echarging-dzt
  PROJECT_NAME: odh-mobility-dc-emobility-echarging-dzt
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}/odh-mobility-dc-emobility-echarging-dzt
  DOCKER_TAG: ${{ github.sha }}
  JAVA_VERSION: '17'

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Test code
        uses: noi-techpark/github-actions/maven-test@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          working-directory: ${{ env.WORKING_DIRECTORY }}
          test-command: 'mvn -B -U clean compile test'

  # Deploy Test
  deploy-test-emobility-echarging-dzt:
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'
    needs: test
    concurrency: deploy-test-emobility-echarging-dzt
    env:
      KEYCLOAK_URL: https://auth.opendatahub.testingmachine.eu
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Create .env file
        uses: noi-techpark/github-actions/env-file@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          # General deployment options
          X_COMPOSE_PROJECT_NAME: ${{ env.PROJECT_NAME }}
          X_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          X_DOCKER_TAG: ${{ env.DOCKER_TAG }}
          X_JAVA_OPTIONS: -Xms128m -Xmx1536m

          # Open Data Hub Writer Connectivity
          X_authorizationUri: ${{ env.KEYCLOAK_URL }}/auth
          X_tokenUri: ${{ env.KEYCLOAK_URL }}/auth/realms/noi/protocol/openid-connect/token
          X_clientId: odh-mobility-datacollector
          X_clientName: odh-mobility-datacollector
          X_clientSecret: ${{ secrets.DATACOLLECTORS_CLIENT_SECRET_TEST }}
          X_scope: openid
          X_BASE_URI: https://mobility.share.opendatahub.testingmachine.eu/json

          # Logging
          X_LOG_LEVEL: info
          X_LOG_STYLE: json
          X_provenance_name: ${{ env.PROJECT_NAME }}
          X_provenance_version: ${{ github.sha }}

          # TODO: Add your env vars here, prefixed with X_
          X_SCHEDULER_CRON: "0 0 7,14 * * *"
          X_SCHEDULER_POOL_SIZE: 1
          X_DZT_BASE_URL: https://proxy.opendatagermany.io
          X_DZT_API_KEY: b375e0ff5afd9b812b03ba3df41f64ec
          X_DZT_WORKER_THREADS: 30
          X_START_DATE: "2023-01-01 00:00:00"

      - name: Build project
        uses: noi-techpark/github-actions/maven-build@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
          java-version: ${{ env.JAVA_VERSION }}
          build-command: 'mvn -B -DskipTests -DfinalName=ROOT clean package'

      - name: Build and push images
        uses: noi-techpark/github-actions/docker-build-and-push@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}


      - name: Deploy application
        uses: noi-techpark/github-actions/docker-deploy@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure/ansible
          hosts: 'test'
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          docker-username: 'noi-techpark-bot'
          docker-password: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          project-name: ${{ env.PROJECT_NAME }}


  # Deploy Production
#  deploy-prod-emobility-echarging-dzt:
#    runs-on: ubuntu-20.04
#    if: github.ref == 'refs/heads/prod'
#    needs: test
#    concurrency: deploy-prod-emobility-echarging-dzt
#    env:
#      KEYCLOAK_URL: https://auth.opendatahub.com
#    steps:
#      - name: Checkout source code
#        uses: actions/checkout@v2
#      - name: Create .env file
#        uses: noi-techpark/github-actions/env-file@v2
#        with:
#          working-directory: ${{ env.WORKING_DIRECTORY }}
#        env:
#          # General deployment options
#          X_COMPOSE_PROJECT_NAME: ${{ env.PROJECT_NAME }}
#          X_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
#          X_DOCKER_TAG: ${{ env.DOCKER_TAG }}
#          X_JAVA_OPTIONS: -Xms128m -Xmx512m
#
#          # Open Data Hub Writer Connectivity
#          X_authorizationUri: ${{ env.KEYCLOAK_URL }}/auth
#          X_tokenUri: ${{ env.KEYCLOAK_URL }}/auth/realms/noi/protocol/openid-connect/token
#          X_clientId: odh-mobility-datacollector
#          X_clientName: odh-mobility-datacollector
#          X_clientSecret: ${{ secrets.DATACOLLECTORS_CLIENT_SECRET_PROD }}
#          X_scope: openid
#          X_BASE_URI: https://mobility.share.opendatahub.com/json
#
#          # Logging
#          X_LOG_LEVEL: "info"
#          X_LOG_STYLE: json
#          X_provenance_name: ${{ env.PROJECT_NAME }}
#          X_provenance_version: ${{ github.sha }}
#
#          # TODO: Add your env vars here, prefixed with X_
#          X_SCHEDULER_CRON_A: "* * * */10 * *"
#          X_SCHEDULER_CRON_B: "* * * */10 * *"
#          X_SCHEDULER_POOL_SIZE: 10
#
#
#      - name: Build project
#        uses: noi-techpark/github-actions/maven-build@v2
#        with:
#          working-directory: ${{ env.WORKING_DIRECTORY }}
#          java-version: ${{ env.JAVA_VERSION }}
#          build-command: 'mvn -B -DskipTests -DfinalName=ROOT clean package'
#
#      - name: Build and push images
#        uses: noi-techpark/github-actions/docker-build-and-push@v2
#        with:
#          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure
#          docker-username: ${{ github.actor }}
#          docker-password: ${{ secrets.GITHUB_TOKEN }}
#
#
#      - name: Deploy application
#        uses: noi-techpark/github-actions/docker-deploy@v2
#        with:
#          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure/ansible
#          hosts: 'prod'
#          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
#          docker-username: 'noi-techpark-bot'
#          docker-password: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
#          project-name: ${{ env.PROJECT_NAME }}

